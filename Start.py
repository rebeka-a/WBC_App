import streamlit as st
import pandas as pd
import datetime
from utils.data_manager import DataManager
from utils.login_manager import LoginManager

# --- Seitenkonfiguration ---
st.set_page_config(page_title="Startseite", layout="wide")

# --- DataManager und LoginManager initialisieren ---
data_manager = DataManager(fs_protocol='webdav', fs_root_folder="WBC_Data")
login_manager = LoginManager(data_manager)

# --- Hauptbereich ---
st.title("Blood Cell Counter ğŸ§®")

# --- EinfÃ¼hrung ---
st.markdown("""
Willkommen zur **Blood Cell Counter App**.

Diese Anwendung wurde speziell entwickelt, Studierende und Laborfachpersonal im Bereich der HÃ¤matologie bei der umfassenden Analyse von Blutproben effizient und zuverlÃ¤ssig zu unterstÃ¼tzen. Der Fokus liegt auf der Erfassung und Auswertung der weiÃŸen und roten Blutzellen sowie auf der strukturierten Dokumentation morphologischer ZellverÃ¤nderungen. Durch den integrierten Vergleich der Ergebnisse mit Referenzbereichen kÃ¶nnen Diagnoseprozesse wesentlich beschleunigt und qualitativ verbessert werden.

**FunktionsÃ¼bersicht:**

ğŸ©¸ Strukturierte und benutzerfreundliche Erfassung sowie manuelle ZÃ¤hlung weisser und roter Blutzellen  
ğŸ©¸ Systematische Dokumentation und Bewertung von morphologischen VerÃ¤nderungen in Blutausstrichen  
ğŸ©¸ Alters- und geschlechtsspezifische Referenzbereiche zur prÃ¤zisen Beurteilung der erfassten Zellpopulationen  
ğŸ©¸ Sichere Speicherung, Archivierung und Verwaltung individueller Patientendaten zur kontinuierlichen Verlaufskontrolle  
ğŸ©¸ Ãœbersichtliche Darstellung aller erfassten Befunde sowie die MÃ¶glichkeit des Exports zur weiteren Analyse oder Archivierung  

**Wichtige Hinweise:**  
            
ğŸ©¸ Um die vollstÃ¤ndige FunktionalitÃ¤t der Blood Cell Counter App nutzen zu kÃ¶nnen, ist eine Anmeldung erforderlich. Neue Nutzer haben die MÃ¶glichkeit, ein Benutzerkonto direkt innerhalb der Anwendung zu erstellen.  
ğŸ©¸ Alle eingegebenen Informationen werden ausschliesslich lokal oder innerhalb eines sicheren, geschÃ¼tzten Servers verarbeitet und gespeichert.  

---
""")

# --- Anmeldung / Benutzerbereich ---
if st.session_state.get("authentication_status"):
    user = st.session_state.get("username", "Unbekannter Benutzer")

    with st.container():
        st.success(f"Angemeldet als: **{user}**")

    # --- Buttons fÃ¼r Weisses & Rotes Blutbild nebeneinander ---
    col1, col2 = st.columns(2)

    with col1:
        if st.button("Zum Weissen Blutbild", use_container_width=True):
            st.switch_page("pages/1_Weisses Blutbild.py")

    with col2:
        if st.button("Zum Roten Blutbild", use_container_width=True):
            st.switch_page("pages/2_Rotes Blutbild.py")

    st.markdown("")  # Abstand

    # --- Logout Button darunter ---
    if st.button("Logout", key="logout_button", use_container_width=True):
        login_manager.authenticator.logout()
        st.rerun()  # âœ… KORRIGIERT

    # --- Daten laden nach Login ---
    try:
        if "data_df" not in st.session_state:
            data_manager.load_user_data(
                session_state_key='data_df',
                file_name='data.csv',
                initial_value=pd.DataFrame(columns=["timestamp", "counts", "gender", "birth_date"]),
                parse_dates=['timestamp']
            )
    except Exception as e:
        st.error(f"Fehler beim Laden der Nutzerdaten: {e}")

# --- Nicht eingeloggt ---
else:
    with st.container():
        st.info("Bitte melden Sie sich an oder registrieren Sie sich, um auf die Funktionen der Blood Cell Counter App zugreifen zu kÃ¶nnen.")
        login_manager.login_register()
